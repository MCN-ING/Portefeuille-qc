diff --git a/App/components/listItems/NotificationListItem.tsx b/App/components/listItems/NotificationListItem.tsx
index ce791235318e3b773a7f97580f9e205ad9995ded..1bc8109123f4e793dd994dccaa84e3cf7845dc01 100644
--- a/App/components/listItems/NotificationListItem.tsx
+++ b/App/components/listItems/NotificationListItem.tsx
@@ -49,6 +49,8 @@ export interface NotificationListItemProps {
   notificationType: NotificationType
   notification: BasicMessageRecord | CredentialExchangeRecord | ProofExchangeRecord | CustomNotificationRecord
   customNotification?: CustomNotification
+  openSwipeableId?: string | null,
+  onOpenSwipeable?: (id: string | null) => void
 }
 
 type DisplayDetails = {
@@ -83,6 +85,8 @@ const NotificationListItem: React.FC<NotificationListItemProps> = ({
   notificationType,
   notification,
   customNotification,
+  openSwipeableId,
+  onOpenSwipeable,
 }) => {
   const navigation = useNavigation<StackNavigationProp<HomeStackParams>>()
   const [store, dispatch] = useStore()
diff --git a/App/screens/Home.tsx b/App/screens/Home.tsx
index ad946ed3ee1af79bbdc90fa70e30eefd6782128c..c6e493347c07bf806ba0615ae4d8be519b401129 100644
--- a/App/screens/Home.tsx
+++ b/App/screens/Home.tsx
@@ -40,6 +40,8 @@ const Home: React.FC<HomeProps> = () => {
   const [showTourPopup, setShowTourPopup] = useState(false)
   const screenIsFocused = useIsFocused()
 
+  const [notificationItemId, setNotificationItemId] = useState<string | null>(null)
+
   const styles = StyleSheet.create({
     flatlist: {
       marginBottom: 35,
@@ -49,26 +51,47 @@ const Home: React.FC<HomeProps> = () => {
   const DisplayListItemType = useCallback((item: any): React.ReactNode => {
     let component: React.ReactNode
     if (item.type === 'BasicMessageRecord') {
-      component = <NotificationListItem notificationType={NotificationType.BasicMessage} notification={item} />
+      component = (
+        <NotificationListItem
+          openSwipeableId={notificationItemId}
+          onOpenSwipeable={setNotificationItemId}
+          notificationType={NotificationType.BasicMessage}
+          notification={item} />
+      )
     } else if (item.type === 'CredentialRecord') {
       let notificationType = NotificationType.CredentialOffer
       if (item.revocationNotification) {
         notificationType = NotificationType.Revocation
       }
-      component = <NotificationListItem notificationType={notificationType} notification={item} />
+      component = (
+        <NotificationListItem
+          openSwipeableId={notificationItemId}
+          onOpenSwipeable={setNotificationItemId}
+          notificationType={notificationType}
+          notification={item} />
+      )
     } else if (item.type === 'CustomNotification' && customNotification) {
       component = (
         <NotificationListItem
+          openSwipeableId={notificationItemId}
+          onOpenSwipeable={setNotificationItemId}
           notificationType={NotificationType.Custom}
           notification={item}
           customNotification={customNotification}
         />
       )
     } else {
-      component = <NotificationListItem notificationType={NotificationType.ProofRequest} notification={item} />
+      component = (
+        <NotificationListItem
+          openSwipeableId={notificationItemId}
+          onOpenSwipeable={setNotificationItemId}
+          notificationType={NotificationType.ProofRequest}
+          notification={item}
+        />
+      )
     }
     return component
-  }, [customNotification, NotificationListItem])
+  }, [customNotification, NotificationListItem, notificationItemId, setNotificationItemId])
 
   useEffect(() => {
     const shouldShowTour = enableToursConfig && store.tours.enableTours && !store.tours.seenHomeTour
diff --git a/App/utils/helpers.ts b/App/utils/helpers.ts
index 3ee51ab9691f55fe50f2ebc17cfe80953507545e..a124aba162a53e465366bf16ca2ffd87d7144d83 100644
--- a/App/utils/helpers.ts
+++ b/App/utils/helpers.ts
@@ -55,7 +55,7 @@ import {
   getDescriptorMetadata,
 } from './anonCredsProofRequestMapper'
 import { parseCredDefFromId } from './cred-def'
-import { isOpenIdCredentialOffer, isOpenIdPresentationRequest } from './parsers'
+import { InvitationQrTypes, isOpenIdCredentialOffer, isOpenIdPresentationRequest } from './parsers'
 
 export { parsedCredDefNameFromCredential } from './cred-def'
 
@@ -1086,6 +1086,10 @@ export const connectFromScanOrDeepLink = async (
       return
     }
 
+    if (uri.startsWith(InvitationQrTypes.DIDCOMM) && !(uri.includes('c_i=') || uri.includes('oob=') || uri.includes('oobUrl=') || uri.includes('d_m='))) {
+      uri = uri.replace(InvitationQrTypes.DIDCOMM, InvitationQrTypes.HTTPS)
+    }
+
     const aUrl = processBetaUrlIfRequired(uri)
     const receivedInvitation = await connectFromInvitation(aUrl, agent, implicitInvitations, reuseConnection)
 
